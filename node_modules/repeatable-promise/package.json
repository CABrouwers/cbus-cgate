{
  "_from": "repeatable-promise@^1.8.5",
  "_id": "repeatable-promise@1.9.2",
  "_inBundle": false,
  "_integrity": "sha512-e7l5hK8t2SmCG7zw7PgDeMOqt4nUvGMXakYNdYkFWdqd4cDsRJMktnPI5V0N7BRsAnq/mO3x0pgZOKUZUlDm1Q==",
  "_location": "/repeatable-promise",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "repeatable-promise@^1.8.5",
    "name": "repeatable-promise",
    "escapedName": "repeatable-promise",
    "rawSpec": "^1.8.5",
    "saveSpec": null,
    "fetchSpec": "^1.8.5"
  },
  "_requiredBy": [
    "/telnet-engine"
  ],
  "_resolved": "https://registry.npmjs.org/repeatable-promise/-/repeatable-promise-1.9.2.tgz",
  "_shasum": "f258d81e1fbb2582fb4076d914c9ec6c937578a1",
  "_spec": "repeatable-promise@^1.8.5",
  "_where": "C:\\Users\\Charles-Andre.HOME\\source\\repos\\cBus-cGate\\node_modules\\telnet-engine",
  "author": {
    "name": "CABrouwers"
  },
  "bugs": {
    "url": "https://github.com/CABrouwers/repeatable-promise/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "A family of Promise based objects that can be resolved/failed remotely and/or multiple times",
  "homepage": "https://github.com/CABrouwers/repeatable-promise#readme",
  "keywords": [
    "promise",
    "async",
    "events",
    "defer",
    "repeatable",
    "call-back",
    "queue",
    "timer",
    "timeout",
    "remote"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "repeatable-promise",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/CABrouwers/repeatable-promise.git"
  },
  "scripts": {
    "test": "echo \\\\\\\"Error: no test specified\\\\\\\" && exit 1"
  },
  "version": "1.9.2"
}
