{
  "_from": "openpromise",
  "_id": "openpromise@2.2.1",
  "_inBundle": false,
  "_integrity": "sha512-qZ+TG4iy0CUMYcGSlc/eoRg2dRACJDa9cVxXVtnaaPcx5hoFWhAPB9KYoR09QJjLyg0YN0AGPNZlAEh12sN6ag==",
  "_location": "/openpromise",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "openpromise",
    "name": "openpromise",
    "escapedName": "openpromise",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/openpromise/-/openpromise-2.2.1.tgz",
  "_shasum": "c13e17429a828a62f2c77e9526098ecb58283b84",
  "_spec": "openpromise",
  "_where": "C:\\Users\\Charles-Andre.HOME\\source\\repos\\cBus-cGate",
  "author": {
    "name": "CABrouwers"
  },
  "bugs": {
    "url": "https://github.com/CABrouwers/repeatable-promise/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "A family of Promise based objects that can be resolved/failed remotely and/or multiple times",
  "homepage": "https://github.com/CABrouwers/repeatable-promise#readme",
  "keywords": [
    "promise",
    "async",
    "events",
    "defer",
    "repeatable",
    "call-back",
    "queue",
    "timer",
    "timeout",
    "remote"
  ],
  "license": "ISC",
  "main": "index.js",
  "name": "openpromise",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/CABrouwers/repeatable-promise.git"
  },
  "scripts": {
    "test": "echo \\\\\\\"Error: no test specified\\\\\\\" && exit 1"
  },
  "version": "2.2.1"
}
